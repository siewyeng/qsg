Week 7 

The lesson went through pumping rules and how it is used for many things including adding in a preposition when it is not present in the utterance. 

Added noun+det-lex-item to the grammar in singlish.tdl for the noun version of this and for everything. This type of lexical item has an empty spr list and functions like a noun with a filled SPR. This is used through the introduction of a lexical entry of this that is not the determiner but also a generic noun. As a result, constructions like the cat eats this can parse with this grammar. There is now a nice parallel between the two “this” - they both have _this_q_rel but only the noun has _thing_n_rel. 

After the lesson, I added the similar entries for these, that and those. However, they have different number values, and this is not reflected by n+det-lex. The category has to be split into different types by number in order to register this distinction with SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM #number. --> changed the n+det-lex to sg_n+det-lex and pl_n+det-lex. (changes made in qsg_14.2) 

The auxiliary be (with the lexical entry of “is”) was created for the experiential form to combine with verbs with the “-ing” suffix. However, since the lexical entry for the verb is underspecified in terms of what FORM it has, it is still able to combine with the auxiliary. In qsg_14.2, a base form was implemented for the lexical entries such that they cannot be considered to be a verb of prp FORM. However, this does not work as the verb is still able to unify with the aux before it undergoes any infllection. [addition from week 9]: A new rule has to be created to make sure every verb has to undergo an inflection before it is able to pass through the basic-binary-phrase.

In an attempt to introduce the different  forms of be for the copula, I added in  

is-cop-lex := be-cop-lex & 
    [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ NUM singular, 
                                         PER 3rd ]]. 

in singlish.tdl and introduced the in the lexicon an is copula that is of type is-cop-lex. However, it did not work and all constructions with the copula like he is cute no longer parse. 

Week 8

1. Added embedded clauses through the introduction of clausal verbs.
A new lexical entry of think_clause was made
think_clause := decl_comp-verb-lex

decl_comp-verb-lex := clausal-verb-lex & clausal-second-arg-trans-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [ LOCAL.CAT.HEAD +vjc ] > ].

This lexical type inherits from the clausal verb lex and clausal-second-arg-trans-lex-item as "think" would take a noun as its subject and a clause (with empty COMPS and SUBJ lists) as its second argument. This allows for sentences like "I think (clause)". Due to how Singlish allows sentences to be headed by adjectives eg "he cute" and not just verbs like in standard English varieties, j was added into the HEAD of the complement of decl_comp-verb-lex.

Question: but c stands for adposition and not clause? then why is c used

In order to parse sentences with "that" as a complementizer, a lexical entry for that_comp of type comps1_complementizer-lex-item was added in:

comps1-complementizer-lex-item := complementizer-lex-item &
  [ SYNSEM.LOCAL.CAT [ VAL.COMPS.FIRST.LOCAL.CAT.MC - ] ].

This lexical item inherits from complementizer-lex-item which inherits from raise-sem-lex-item. Raise-sem-lex-item allows the complementizer to take the things from the VAL of its complement and pass them up while complementizer-lex-item has certain features that indicates that the complement wants a clause as its complement which as mentioned earlier, can be headed by a verb or adjective in Singlish.

Lexical entries were also made for predicative adjectives such that each adjective had an attributive and a predicative entry. The predicative entries were made to inherit from pred-adj-lex.

pred-adj-lex := adj-lex &
    [ SYNSEM.LOCAL.CAT.HEAD.MOD < >, 
      SYNSEM.LOCAL.CAT.VAL.SUBJ < [LOCAL [CAT.HEAD noun,                                                
                                  	  CONT.HOOK.INDEX #ind ] ] >,
      SYNSEM.LKEYS.KEYREL.ARG1 #ind ].

To complement this, and the adjective headed clauses in Singlish, a new label "ADJS" was created.

adjs-label := label & 
	   [ SYNSEM.LOCAL[ CAT [ HEAD adj,
                    		 HEAD.MOD < >,
                                 VAL [ COMPS < >,
				       SUBJ < > ] ],
                           COORD-STRAT "" ],

	     LABEL-NAME "ADJS" ].

The ADJS labels would be used in the top nodes of clauses headed by adjectives. After the label was created, attributive adjectives were initially also labelled as ADJS since they also had empty COMPS and SUBJ lists. The empty HEAD.MOD feature was created to prevent that.
 
question: In subj-head-phrase, the daughter still has to be of HEAD verb --> why can the sentence "the cat cute" parse?

For the omission of the aux eg. "He is sleeping" to "He sleeping" should I do a null aux that has the same supertype but an empty stem? (sounds like it could cause a lot of problems) 







TODO: allow the adj_pred to only combine with bare NPs --> eg. "he cute" (SOLVED)
      --> include other adj_pred entries for the other adjectives

      find out why a possible parse for 'he is cute' turns it into an interrogative
      find out why all attributive adjectives are now ADJS (SOLVED - refer to adjs-label in labels.tdl)
      
      Stop constructions like "me sleep" (SOLVED - refer to lexicon)
      Similarly, stop constructions like "me think he sleeping" --> made a change to decl_comp-verb-lex but did not solve problem

      Need to stop attr_adj from modifying pronouns (SOLVED) --> by adding in LOCAL.CAT.HEAD.PRON - under the MOD value of attr-adj-lex

      Add in ask and whether in lex and have them with the right SF (SOLVED)

      Reduce the number of trees by allowing verbs to only take nouns with empty SPR (SOLVED)

Week 9

"continue" takes grammatical subject but no semantic subject VS "decide" that takes both grammatical and semantic subject
RAISING = when you pass everything up 
ditrans-first-arg-raising-lex-item eg. "
trans-first-arg-raising ... eg. "Kim seems to sleep."
---> make "glass" into a non count noun
Added in COUNT bool as a feature
and introduced mass_noun-noun-lex in contrast with the common_noun-noun-lex. Also changed the COUNT feature in SPEC of plural-determiner-lex to COUNT +
--> fix neg and aux

--> changes made: added in the glass and not and does
--> need to change raising to control verb...
--> how to limit "keyi" such that it cannot take anything with an aspect marker

The sentences "I can eat glass. It does not hurt me." were parsed after adding in the relevant lexical entries. Since all existing common nouns were countable, the addition of "glass" had to fit into a new category and mass_noun-noun-lex was introduced along with a new COUNT bool feature.

mass_noun-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd,
				       NUM singular,
				       COUNT - ] ].

It is similar to the lexical entry for common nouns but with COUNT - and NUM singular. In order to prevent the unification of mass nouns with certain determiners, the COUNT value of the SPEC in the plural-determiner-lex is set to +, preventing noun phrases like "these glass".

"does" was originally inserted in as an subj-raise-aux-no-pred. But it is actually subject controlling and not raising. A new type for the subj-control-aux was created in singlish.tdl but it was unable to link the subj of "does" to its comp and this change has since been commented out.
The current version of the grammar uses subj-raise-aux-no-pred. While the tree looks correct, a problem exists in the mrs when "does not" is present and the complement of "does" is unable to index the subject as its ARG1. However, the problem does not occur in sentence like "it not hurt me" or "It does hurt me".

"not" was added in to negate "hurt". Although both "not" and the existing "never" both serve to negate the predicate, they function in different environments: "never" is POSTHEAD - and only used for verbs that are not auxiliaries, while "not" negates the auxiliary and is POSTHEAD +. Thus, two distinct types were created from the neg-adv-lex to fit the two adverbs. Both types are scopal adv but have different features in the HEAD.MOD.

Since "it does not hurt me" and "it hurt me" are okay, but "it not hurt me" is not, a possible conclusion would be that "not" modifies the auxiliary verb and not "hurt". This change enabled the right MRS to be formed for the sentence "it does not hurt me" which previously failed to link "it" as the subject of the verb "hurt". However, this new change in the lexical type enables "not" to modify auxiliary verbs and not adjectives. How would I allow it to modify adjectives as well?

modals like "can" were added in very early in this grammar but have not been written about. It is of type subj-raise-aux-with-pred which means it raises the subject. Also, in order to prevent sentences like "he can sleeps", a base form was created that specifies that the verb to be uninflected and this is the form that can's complement must take. 


delphin process is the command?
go to pydelphin's document
-g gives the path to the compile grammar (same as ace)
delphin process -g [grammar] 
it's recommended that you have a source profile (where they write the generation results) that is different
-e for the generation mode
1st arg is the source, second arg is the destination?
from the one where the parsed one is
delphin process -h to see the choices
usually, parse-id is the same as i-id
then do delphin select "parse-id surface"

The testsuite was updated to reflect the new phenomena for the first time since week 7.

False negatives remain the same:
2. that ant the cat eat.
33. he never --> "never" cannot act as a predicate. Sentence cannot be headed by "never"
42. it sleeping is it
43. is it it sleeping
45. it sleeping --> "-ing" is still unable to stand without the auxiliary "is"
67. the cat was kacaued --> passives and past tense have not been added

Due to new additions, and improvements to the grammar, previous false positives involving the adj-pronoun construction and intransitive verbs taking accusative pronouns as subjects have been eliminated but new false positives have arisen.
17. that cats sleep. --> this uses that_comp, and what is formed is not a sentence. How to stop this from parsing???
70. the cat think he cute that. --> have to make it such that and clause with "that" go through head-comp and not comp-head

Added in "already" as a scopal adv that functions similar to the neg-adv-lex.

Started treebanking.
Downloaded ace ver 0.30 along with acetools, created a link from ace to the the ace in bin (ver. 0.30), an another from fftb to the fftb inside acetools-0.9.30
$ln -s acetools-x86-0.9.30/fftb
$mkprof -s src/profile new/profile (inside ace-0.9.30/)
$ln -s ace-0.9.30-x86-64/ace-0.9.30/ace

Then all the ace-0.9.30 and acetools were moved into the bin in home. the assets folder from ace-0.9.31 was also copied into ace-0.9.30 for treebanking.

Tentative rules in my fftb
In the treebank, base-lex was NOT chosen in sentences like 'he sleep' because i want base-lex to be used when the verbs have to be in their base from like in 'he can sleep'. Instead, another category of lex should be created for the underspecified version which looks identical to the base-lex. That is to say base-lex cannot be further inflected while this underspecified version can still undergo eg. 3sg inflection.
However, for nouns, the [common noun] would be assumed to be singular as this is more unmarked in Singlish (imo).
For the tree, all coordination starts from the left.

Changes in the grammar:
previously, both 'does' and 'is_aux' from the lexicon were of the same type subj-raise-aux-no-pred however, they take complements of different forms. It was not detected as constructions like 'it does hurt me' were allowed as 'hurt' is of FORM form and was accepted as a prp complement. However, this gives false positives like (1)'it does hurting me' and (2)'he is sleep'. This distinction and the creation of 

does_subj-raise-aux-no-pred := subj-raise-aux & trans-first-arg-raising-lex-item-2 &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM base ].

prevents (1). (2) has to be prevented through an adjustment in the matrix for the types that are allowed to unify; through preventing the uninflected lexical entry from going through the rules.

Week 10

The grammar was parsing sentences like 'i think it cute that' with "that" as a that_comp going through a comp-head rule with the clause. In order to prevent such constructions, the feature of HEAD.INIT was added into singlish.tdl with head-comp-phrase having the head daughter with HEAD.INIT + and comp-head-phrase having a head daughter with HEAD.INIT -. To prevent the earlier example, INIT + was added into the features of complementizer-lex-item which decl_comps-complementizer-lex-item (the type for that_comp) inherits from. However, since the question particle "is it" also inherits from complementizer-lex-item, this created an issue as the question particle can be used both at the start or at the end of the sentence. Thus, the HEAD.INIT + feature was moved to the subtypes of decl_comps-complementizer-lex-item and int_comps-complementizer-lex-item.

In addition, there has been problems with sentences like 'it is cute' being able to be parsed as an int-cl in the node after it has passed through the subj-head phrase. This was a problem with the entry for subj-head--phrase which was copied from subj-v-inv-lrule. It has since been resolved by removing the incorrect extra information.

New lexical entries were made to allow for a smoother machine translation to be done with the Mandarin Chinese grammar. Among them was "give". A new ditransitive verb lexical type was also created for the word. It inherits from main-verb-lex and ditransitive-lex-item. The case of the subjext is specifed to be nominative, while the cases for both objects are accusative. The entry only allows for constructions with the indirect object preceding the direct object due to the simple grammar which does not contain prepositions. The second complement is also specified to be PRON - in order to stop constructions like 'he give the cat me.'

The Mandarin Chinese grammar also includes a lexical entry for "have". However, considering how it is an irregular verb (which is at the moment not supported by my grammar) and that "got" is a more suitable Singlish term for many meanings for "have", a lexical entry for "got"  will be included but with the predicate _have_v_rel (?).

Upon further examination, I realised that "already" probably should not have a predicate as in functions to change the aspect and does not add any other meaning. Therefore, it should not be a scopal-adv. [no appropriate changes have been made yet]

To match the Mandarin Chinese grammar, agak with the PRED of _roughly_a_rel was added into the lexicon. Since it seems to only modify AUX VPs like "can ..." or "know how to ...", it was made to be quite similar to not_neg-adv-lex with thhe exception of the HEAD.MOD features which includes AUX + and an empty VAL.COMPS list. Within not_neg-adv-lex, a non-empty COMPS list was added in its HEAD.MOD value to prevent constructions like "it does hurt me not", where "not" modifies the entire VP of "does hurt me", from being parsed.

After the first half of week 10, and the above tweaks to the grammar, both the number of false negatives and positives decreased.
False negatives:
2. That ant the cat eat
33. He never.
			--> because I changed prp to be a finite instead of a nonfinite FORM, "it 				    sleeping" can parse as a sentence
73. He already sleep. 

False positives:
17. That cat sleeps --> because a CP can parse like a sentence

In order to parse 73, the POSTHEAD + value was taken away from aspect-adv-lex. However, this allowed for constructions like "he can already sleep" which is ungrammatical. Thus, maybe a better was would be to prevent a verb that has been modiified by "already" from being a COMPS for the auxiliary verb. In order to stop this, a new ASPECT value of no_aspect was created and the ASPECT value of the complement of the auxiliary verb "can" was given that value. The same was done for does_subj-raise-aux-no-pred. This corrects the tree made as trees like 'he can [sleep already]' are stopped in and only those like 'he [can sleep] already' are allowed instead. 

Also, the prp cannot be used with the aspect adv in the current grammar which is not the case in the actual language.

Added in "there_n" as a translation for the Mandarin "nali". Since the word in BP's grammar functions only as the subject of the sentence, this "there" will be a noun. However, since this "there" functions in sentences with "got" and not other verbs in Singlish, a new HEAD feature LOC was created. Most verbs will have their subj as LOC - except for "got" which does not specify its LOC value. The lex type of "there" also specifies that it has a CASE nom since it can only act as a subject.
Now, There: 
got cat
*sleep
can sleep --> but this is a different type of semantics as "there" is not the subj of "can" (made in unngrammatical again)
*does sleep
*hurt me
*give me the cat
*will got cat

--> how do I make it such that the base FORM of "got" is "have"??? because aux cannot go with "got"

Got rid of single-lex-rule in the lrules, to prevent overgeneration.

Added in "want" as a transitive verb when the COMPS is a noun, and as an aux that can have COMPS of FORM base or toinf. A new form was added under the nonfinite form. And a new type was also created for "to".

to-infinitive-lex := trans-first-arg-raising-lex-item-2 & verb-lex &
  [ SYNSEM.LOCAL.CAT [ HEAD.FORM toinf,
		       VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM base ] ].

The indirect object for "ask" was also given an empty SPR list in order for all the nouns to become Bare NPs before joining with "ask" under the head-comp-phrase.

Also, to ensure that "to" takes a full VP as its COMPS, the COMPS list of its complement was set to be empty. This gets rid of the previously possible construction "he wants [to give] me a cat."

siewyeng@sy-ThinkPad-L460:~/delphin/sing_gram$ echo "the ants think that she will sleep" | ace -g qsg.dat -Tfq | ace -g qsg.dat -e 
NOTE: 2 readings, added 303 / 130 edges to chart (25 fully instantiated, 58 actives used, 22 passives used)	RAM: 1247k
NOTE: parsed 1 / 1 sentences, avg 1247k, time 0.02533s
The ants think will she sleep
The ants think will she sleep
The ants think she will sleep
The ants thinking she will sleep
The ants think she will sleep
The ants thinking will she sleep
The ants thinking she will sleep
The ants thinking will she sleep
NOTE: 33 passive, 234 active edges in final generation chart; built 62 passives total. [8 results]

The ants think will she sleep
The ants thinking she will sleep
The ants think will she sleep
The ants thinking she will sleep
The ants thinking will she sleep
The ants thinking will she sleep
The ants think she will sleep
The ants think she will sleep
NOTE: 33 passive, 234 active edges in final generation chart; built 62 passives total. [8 results]

NOTE: generated 2 / 2 sentences, avg 2769k, time 0.06938s
NOTE: transfer did 2 successful unifies and 4 failed ones

--> "the ants think she will sleep" should be different from "the ants think will she sleep"
Thus, maybe the comps of "think" cannot be a question.
*need to change "got" to non inflectional
--> changing "experiential" to imperfective to allow for easier translation
Introduced a new verb feature called NONINFL where the only thing that is noninfl + so far is "got". This prevents constructions like "he gots cats"
--> why is MA generated for some propositions but not others. eg. he can eat the cat vs. he can eat the cat already

The grammar parsed sentences like "that cat sleeps" as a subj-head sentence or as a complementizer phrase which is not desired. In order to stop this, c (for complement) was initially removed from the root such that it has a HEAD of +vj. However, this prevented "is it" sentences from parsing as they are headed by that complementizer. Thus, the change was then reverted. Instead, that_comp was given an MC -. and thus, a CP headed by "that" cannot be a root.

is it the cat want to sing (okay)
the cat want to sing is it (over-generates)

